name: Publish

on:
  push:
    tags:
      # Matches stable and pre-releases
      - "[0-9]+.[0-9]+.[0-9]+*"
    branches:
      - master
      - cablu*
      - ci/**

jobs:
  docker:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Outputs the name of the repository (owner/repo)
      - name: Build Image Name
        id: image
        run: |
          # The name of the owner and of the repository: owner/repository
          IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          echo ::set-output name=image_name::${IMAGE_NAME}


      # Outputs the containers tags for staging branches
      # Only publishes them onto Docker Hub
      - name: Prepare Tags for Staging
        id: staging
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          set -x

          # Version name is the branch name
          # Slashes are substitued by dashes
          CLEAN_BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)
          SHA=${GITHUB_SHA}

          # Target Docker Hub with the SHA value
          # and branch name
          TAGS=$"\
          cip123/saleor:${CLEAN_BRANCH_NAME},\
          cip123/saleor:sha-${SHA}\
          "

          # Set version name for open-containers version label as:
          # <branch>-<drift>-g<6-digit-hash>
          NAMED_VERSION=$(git describe --all --long | tr -d $'\n')

          # Output the target tags
          echo "
          CONTAINER_TAGS=${TAGS}
          NAMED_VERSION=${NAMED_VERSION}
          " >> "${GITHUB_ENV}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.CONTAINER_TAGS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            PROJECT_VERSION=${{ env.NAMED_VERSION }}
            COMMIT_ID=${{ github.sha }}

      - name: Image digest
        run: |
          echo $"\
            Digest: ${{ steps.docker_build.outputs.digest }}
            Tags: ${{ env.CONTAINER_TAGS }}"
